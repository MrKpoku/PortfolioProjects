

-- CLEANING DATA IN SQL QUERIES 

SELECT
*
FROM PortfolioProject.DBO.[NASHVILLEHOUSING]
    




 -- STANDARDIZE DATE FORMAT 

 SELECT
SaleDate,
 CONVERT(DATE,SALEDATE)
FROM PortfolioProject.DBO.[NASHVILLEHOUSING]

UPDATE NASHVILLEHOUSING
SET SALEDATE = CONVERT(DATE,SALEDATE)


 
ALTER TABLE NashvilleHousing
ADD SALEDATECONVERTED DATE ;

UPDATE NASHVILLEHOUSING
SET SALEDATECONVERTED = CONVERT(DATE,SALEDATE)


--POPULATE PROPERTY ADDRESS DATA 


 SELECT
*
FROM PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning]
--WHERE PROPERTYADDRESS IS NULL 
ORDER BY ParcelID


SELECT
AA.ParcelID,AA.PropertyAddress,
BB.ParcelID,BB.PropertyAddress,ISNULL (AA.PropertyAddress,BB.PropertyAddress)
FROM PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning] AS AA 
JOIN PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning] AS BB
    ON AA.ParcelID = BB.ParcelID
    AND AA.[UniqueID] <> BB.[UniqueID]
WHERE AA.PropertyAddress IS NULL 

UPDATE AA
SET PropertyAddress = ISNULL (AA.PropertyAddress,BB.PropertyAddress)
FROM PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning] AS AA 
JOIN PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning] AS BB
    ON AA.ParcelID = BB.ParcelID
    AND AA.[UniqueID] <> BB.[UniqueID]
WHERE AA.PropertyAddress IS NULL 


--BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (ADDRESS,CITY,STATE)

SELECT
PropertyAddress
FROM PortfolioProject.DBO.[Nashville Housing Data for Data Cleaning]
--WHERE PROPERTYADDRESS IS NULL
--ORDER BY PARCELID

SELECT
SUBSTRING ( PropertyAddress,1 , CHARINDEX(',',PropertyAddress)-1) AS ADDRESS,
SUBSTRING ( PropertyAddress, CHARINDEX(',',PropertyAddress)+1,LEN(PropertyAddress)) AS ADDRESS

FROM PortfolioProject.DBO.[NASHVILLEHOUSING]



UPDATE NASHVILLEHOUSING
SET PROPERTYSPLITADDRESS = CONVERT (DATE,SALEDATE)

ALTER TABLE NASHVILLEHOUSING
ADD PROPERTYSPLITCITY NVARCHAR(255);

UPDATE NASHVILLEHOUSING
SET PROPERTYSPLITCITY = SUBSTRING ( PropertyAddress, CHARINDEX(',',PropertyAddress)+1,LEN(PropertyAddress))


SELECT
*
FROM PortfolioProject.DBO.[NASHVILLEHOUSING]


SELECT
OWNERADDRESS
FROM PortfolioProject.DBO.[NASHVILLEHOUSING]


SELECT
PARSENAME(REPLACE(OWNERADDRESS, ',','.'),3),
PARSENAME(REPLACE(OWNERADDRESS, ',','.'),2),
PARSENAME(REPLACE(OWNERADDRESS, ',','.'),1)
FROM PortfolioProject.DBO.[NASHVILLEHOUSING]

ALTER TABLE NASHVILLEHOUSING
ADD OWNERSPLITADDRESS NVARCHAR(255);

UPDATE NASHVILLEHOUSING
SET OWNERSPLITADDRESS = PARSENAME(REPLACE(OWNERADDRESS, ',','.'),3)

ALTER TABLE NASHVILLEHOUSING
ADD OWNERSPLITCITY NVARCHAR (255);

UPDATE NASHVILLEHOUSING
SET OWNERSPLITCITY = PARSENAME(REPLACE(OWNERADDRESS, ',','.'),2) 

ALTER TABLE NASHVILLEHOUSING
ADD OWNERSPLITSTATE NVARCHAR (255);

UPDATE NASHVILLEHOUSING
SET OWNERSPLITSTATE = PARSENAME(REPLACE(OWNERADDRESS, ',','.'),1)


SELECT
*
FROM PortfolioProject.DBO.NASHVILLEHOUSING



--CASE STATEMENT ON PROPERTYSPLITCITY 


SELECT
CASE
WHEN PROPERTYSPLITCITY = 'OLD HICKORY' THEN 'GOODBUY'
WHEN PROPERTYSPLITCITY = 'JOELTON' THEN 'STANDARDBUY'
WHEN PROPERTYSPLITCITY = 'ANTIOCH' THEN 'VERYGOODBUY'
WHEN PROPERTYSPLITCITY = 'BRENTWOOD' THEN 'EXCELLENTBUY'
WHEN PROPERTYSPLITCITY = 'NASHVILLE' THEN 'SUPERBBUY'
ELSE 'BESTBUY' 
END AS SPLITCITYDESCRIPTION
FROM PortfolioProject.DBO.NASHVILLEHOUSING


-- REMOVING DUPLICATES

WITH ROWNUMCTE AS (

SELECT *,
    ROW_NUMBER () OVER (
    PARTITION BY PARCELID,
                 PROPERTYADDRESS,
                 SALEPRICE,
                 SALEDATE,
                 LEGALREFERENCE
                 ORDER BY UNIQUEID
                 ) ROW_NUM
FROM PortfolioProject.DBO.NASHVILLEHOUSING
--ORDER BY PARCELID
)
SELECT * 
FROM ROWNUMCTE
WHERE ROW_NUM > 1
--ORDER BY PROPERTYADDRESS


--DELETE UNUSED COLUMNS 

SELECT
*
FROM PortfolioProject.DBO.NASHVILLEHOUSING

ALTER TABLE PortfolioProject.DBO.NASHVILLEHOUSING
DROP COLUMN OWNERADDRESS,TAXDISTRICT,PROPERTYADDRESS

ALTER TABLE PortfolioProject.DBO.NASHVILLEHOUSING
DROP COLUMN SALEDATE